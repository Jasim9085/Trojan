# Name of your workflow
name: Android CI Build

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Java Development Kit (JDK)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Install a specific version of Gradle
      # This step downloads and sets up Gradle without needing the wrapper.
      # You can change '8.7' to any other Gradle version your project needs.
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.7'
      
      # Step 4: Create google-services.json from secret
      # This step securely creates the google-services.json file needed for the build.
      # It only runs if you have created the secret in your repository settings.
      - name: Create google-services.json
        if: secrets.GOOGLE_SERVICES_JSON != ''
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > app/google-services.json

      # Step 5: Compile the app using the installed Gradle
      # Note that we are now calling 'gradle' directly, not './gradlew'.
      - name: Build with Gradle
        run: gradle assembleDebug

      # Optional Step 6: Upload the build artifact (the APK)
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
